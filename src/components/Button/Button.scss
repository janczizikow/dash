@import '../../shared.scss';

.Btn {
  padding: 0.375rem 0.75rem;
  position: relative;
  display: inline-block;
  color: $white;
  background-color: $primary;
  border: 1px solid transparent;
  border-radius: 0.25rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  text-decoration: none;
  outline: 0;
  user-select: none;
  transition: opacity 0.15s ease-in-out, border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out, background-color 0.15s ease-in-out;

  &:disabled {
    opacity: 0.8;
    cursor: not-allowed;
  }

  &:not(:disabled) {
    cursor: pointer;

    &:hover {
      border-color: $primary;
      background-color: darken($primary, 5%);
    }

    &:focus {
      box-shadow: 0 0 0 4px rgba(0, 100, 255, 0.25);
    }
  }

  &--link {
    // FIXME:
    color: $dark;
    background-color: transparent !important;
    border-color: transparent !important;
    box-shadow: none !important;

    &:hover,
    &:focus {
      border-color: transparent !important;
      box-shadow: none;
    }
  }

  &::after {
    content: '';
    position: absolute;
    display: none;
    top: 50%;
    left: 50%;
    width: 1.25rem;
    height: 1.25rem;
    border-radius: 50%;
    border-top: 2px solid rgba(255, 255, 255, 0.2);
    border-right: 2px solid rgba(255, 255, 255, 0.2);
    border-bottom: 2px solid rgba(255, 255, 255, 0.2);
    border-left: 2px solid $white;
    transform: translate(-50%, -50%) rotate(0deg);
    animation: loader 1.1s infinite linear;
  }

  &--block {
    display: block;
    width: 100%;
  }

  &--rounded {
    border-radius: 200px;
  }

  &--outline {
    border-color: $primary;
    background-color: transparent;

    &:hover {
      color: $white;
      background-color: $primary;
    }
  }

  &--loading {
    color: transparent;
    opacity: 0.75;
    cursor: default;

    &:hover {
      border-color: transparent;
      background-color: $primary;
    }

    &:focus {
      box-shadow: 0;
    }

    &::after {
      display: block;
    }
  }
}

@keyframes loader {
  0% {
    transform: translate(-50%, -50%) rotatate(0deg);
  }

  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
